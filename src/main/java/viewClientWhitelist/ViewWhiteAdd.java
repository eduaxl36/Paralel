/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package viewClientWhitelist;


import viewClientDarklist.*;
import com.formdev.flatlaf.FlatLightLaf;
import controller.ViewDarkController;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import javax.swing.table.DefaultTableModel;

import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.LocalDateTime;
import java.time.LocalTime;
import java.time.ZoneId;
import java.time.temporal.ChronoUnit;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import static viewClientDarklist.DarklistManagerViewClient.lblDtProd;
import static viewClientDarklist.DarklistManagerViewClient.tbMainViewLst;




/**
 *
 * @author Eduardo.Fernando
 */
public class ViewWhiteAdd extends javax.swing.JFrame {

    /**
     * Creates new form DarklistDetail
     */
    
    JDialog modalDialo;
    ViewDarkController ControllerAdd;
    
    public static boolean instanciaAbertaAdicao = false;
    
    
    
    public ViewWhiteAdd() {
        initComponents();
        FlatLightLaf.install();
        String username = System.getProperty("user.name");
        lblUserName.setText(username);
        JDialog modalDialog = new JDialog();
        modalDialog.setModal(true);
        ControllerAdd = new ViewDarkController();
        
        

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pn = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        Txt_HouseHold = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jButton1 = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        jSeparator3 = new javax.swing.JSeparator();
        finalHouseHoldDate = new datechooser.beans.DateChooserCombo();
        InitialHouseHoldDate = new datechooser.beans.DateChooserCombo();
        jScrollPane1 = new javax.swing.JScrollPane();
        TxtComment = new javax.swing.JTextArea();
        lblUserName = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Inclusion de Hogar en Darklist");
        setAlwaysOnTop(true);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        pn.setBackground(new java.awt.Color(255, 255, 255));
        pn.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/darklist.png"))); // NOI18N
        jLabel1.setText("+ DARKLIST");
        pn.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 20, 180, 30));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/casa.png"))); // NOI18N
        jLabel2.setText("   Hogar");
        pn.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 70, 160, 30));
        pn.add(Txt_HouseHold, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 110, 160, 30));

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/datainicio.png"))); // NOI18N
        jLabel3.setText("  Inicio");
        pn.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 150, 160, 30));

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/datafinal.png"))); // NOI18N
        jLabel4.setText("   Cerramiento");
        pn.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 240, 160, 20));

        jSeparator1.setBackground(new java.awt.Color(204, 204, 204));
        jSeparator1.setForeground(new java.awt.Color(204, 204, 204));
        pn.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 60, 340, 20));

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/add.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        pn.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 340, 40, 40));

        jSeparator2.setBackground(new java.awt.Color(204, 204, 204));
        jSeparator2.setForeground(new java.awt.Color(204, 204, 204));
        pn.add(jSeparator2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 390, 310, 10));

        jSeparator3.setBackground(new java.awt.Color(204, 204, 204));
        jSeparator3.setForeground(new java.awt.Color(204, 204, 204));
        pn.add(jSeparator3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 8, 340, 20));

        finalHouseHoldDate.setLocale(new java.util.Locale("pt", "BR", ""));
        pn.add(finalHouseHoldDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 280, 160, -1));

        InitialHouseHoldDate.setCurrentView(new datechooser.view.appearance.AppearancesList("Swing",
            new datechooser.view.appearance.ViewAppearance("custom",
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Segoe UI", java.awt.Font.PLAIN, 12),
                    new java.awt.Color(187, 187, 187),
                    new java.awt.Color(0, 0, 255),
                    false,
                    true,
                    new datechooser.view.appearance.swing.ButtonPainter()),
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Segoe UI", java.awt.Font.PLAIN, 12),
                    new java.awt.Color(187, 187, 187),
                    new java.awt.Color(0, 0, 255),
                    true,
                    true,
                    new datechooser.view.appearance.swing.ButtonPainter()),
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Segoe UI", java.awt.Font.PLAIN, 12),
                    new java.awt.Color(0, 0, 255),
                    new java.awt.Color(0, 0, 255),
                    false,
                    true,
                    new datechooser.view.appearance.swing.ButtonPainter()),
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Segoe UI", java.awt.Font.PLAIN, 12),
                    new java.awt.Color(128, 128, 128),
                    new java.awt.Color(0, 0, 255),
                    false,
                    true,
                    new datechooser.view.appearance.swing.LabelPainter()),
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Segoe UI", java.awt.Font.PLAIN, 12),
                    new java.awt.Color(187, 187, 187),
                    new java.awt.Color(0, 0, 255),
                    false,
                    true,
                    new datechooser.view.appearance.swing.LabelPainter()),
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Segoe UI", java.awt.Font.PLAIN, 12),
                    new java.awt.Color(187, 187, 187),
                    new java.awt.Color(255, 0, 0),
                    false,
                    false,
                    new datechooser.view.appearance.swing.ButtonPainter()),
                (datechooser.view.BackRenderer)null,
                false,
                true)));
    InitialHouseHoldDate.setLocale(new java.util.Locale("pt", "BR", ""));
    InitialHouseHoldDate.setBehavior(datechooser.model.multiple.MultyModelBehavior.SELECT_SINGLE);
    InitialHouseHoldDate.setShowOneMonth(true);
    pn.add(InitialHouseHoldDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 200, 160, -1));

    TxtComment.setColumns(20);
    TxtComment.setRows(5);
    jScrollPane1.setViewportView(TxtComment);

    pn.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 320, 160, 60));

    lblUserName.setText("TESTE");
    pn.add(lblUserName, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 400, 160, 30));

    jLabel6.setText("Cambiado Por  : ");
    pn.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 400, 90, 30));

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addComponent(pn, javax.swing.GroupLayout.PREFERRED_SIZE, 308, Short.MAX_VALUE)
    );
    layout.setVerticalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addComponent(pn, javax.swing.GroupLayout.PREFERRED_SIZE, 438, javax.swing.GroupLayout.PREFERRED_SIZE)
    );

    pack();
    }// </editor-fold>//GEN-END:initComponents

    public static void removeTableLine() {

        DefaultTableModel df = (DefaultTableModel) tbMainViewLst.getModel();

        df.removeRow(tbMainViewLst.getSelectedRow());

    }

    public static long calcularDiferencaEmMinutos(LocalDate data1, LocalDate data2) {
        LocalDateTime dateTime1 = LocalDateTime.of(data1, LocalTime.MIN);
        LocalDateTime dateTime2 = LocalDateTime.of(data2, LocalTime.MIN);

        return ChronoUnit.DAYS.between(dateTime1, dateTime2);
    }

    public  boolean addLineOneTable() throws ParseException {

        DefaultTableModel df = (DefaultTableModel) tbMainViewLst.getModel();

        LocalDate datainicial = LocalDate.parse(InitialHouseHoldDate.getText(), DateTimeFormatter.ofPattern("dd/MM/yyyy"));
        String TreatedInitialDate = datainicial.format(DateTimeFormatter.ofPattern("yyyy-MM-dd"));

        LocalDate datafinal = LocalDate.parse(finalHouseHoldDate.getText(), DateTimeFormatter.ofPattern("dd/MM/yyyy"));
        String TreatedFinalDate = datafinal.format(DateTimeFormatter.ofPattern("yyyy-MM-dd"));

        Date RawProductionDate = new SimpleDateFormat("yyyyMMdd").parse(lblDtProd.getText());

        LocalDate ProducionDate = RawProductionDate.toInstant()
                .atZone(ZoneId.systemDefault())
                .toLocalDate();

        boolean allowInsertion = datainicial.isAfter(ProducionDate) || datainicial.equals(ProducionDate);

        if (!allowInsertion) {

            
            JOptionPane.showMessageDialog(null, "No se puede inserir un hogar\ncon una fecha inferior al produccion -4(dias) atual!", "Erro al añadir", JOptionPane.ERROR_MESSAGE);

            
        } else {

            boolean deniedInsertion = datafinal.isBefore(datainicial);

            if (deniedInsertion) {

                JOptionPane.showMessageDialog(null, "La fecha final no puede ser inferior al fecha de inicial!", "Error al añadir", JOptionPane.ERROR_MESSAGE);

            } else {

                DateTimeFormatter dfw = DateTimeFormatter.ofPattern("yyyyMMdd");

                boolean ValidadorExistencia = ControllerAdd.validarSeProucaoJaFoi(Long.parseLong(Txt_HouseHold.getText()));
                
                if (ValidadorExistencia == false) {

                    df.addRow(new Object[]{
                        Txt_HouseHold.getText(),
                        TreatedInitialDate,
                        TreatedFinalDate,
                        "\"" + TxtComment.getText() + "\"",
                        true,
                        "Nueva Linea/En Aprobacion",
                        lblUserName.getText(),
                        calcularDiferencaEmMinutos(LocalDate.parse(lblDtProd.getText(), dfw), datafinal),
                        "Hogar puesto en Darklist"

                    });

                    return true;
                } else {

                    JOptionPane.showMessageDialog(null, "El hogar selecioando ya esta presente en darklist con el status true!", "Error al añadir", JOptionPane.ERROR_MESSAGE);

                }

            }

        }

        return false;
    }

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

             int resposta = JOptionPane.showConfirmDialog(modalDialo, "Desea añadir el logar en darklist?", 
                     "Confirmacion", 
                     JOptionPane.YES_OPTION);
        
        if (resposta == JOptionPane.YES_OPTION) {
            // Caso a opção selecionada seja "Sim"
                 
        try {

            if (!addLineOneTable()) {

                
                
            } else {

                this.setVisible(false);
                instanciaAbertaAdicao=false;

            }

            // TODO add your handling code here:
        } catch (ParseException ex) {
            Logger.getLogger(ViewWhiteAdd.class.getName()).log(Level.SEVERE, null, ex);
        }

        } else if (resposta == JOptionPane.NO_OPTION) {
 
            JOptionPane.showMessageDialog(null, "Você selecionou 'Não'.");
            
           
        
        
        }
  
    }//GEN-LAST:event_jButton1ActionPerformed

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed

            instanciaAbertaAdicao=false;



        // TODO add your handling code here:
    }//GEN-LAST:event_formWindowClosed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ViewWhiteAdd.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ViewWhiteAdd.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ViewWhiteAdd.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ViewWhiteAdd.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ViewWhiteAdd().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static datechooser.beans.DateChooserCombo InitialHouseHoldDate;
    public static javax.swing.JTextArea TxtComment;
    public static javax.swing.JTextField Txt_HouseHold;
    public static datechooser.beans.DateChooserCombo finalHouseHoldDate;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    public static javax.swing.JLabel lblUserName;
    private javax.swing.JPanel pn;
    // End of variables declaration//GEN-END:variables
}
